if (req.method === "POST") {
      try {
        const { anime_id, status, comment, image_url } = req.body;

        console.log("POST /api/watchlist body:", req.body);

        if (!anime_id || !status) {
          console.error("Bad request: Missing anime_id or status");
          return res.status(400).json({ error: "anime_id and status are required" });
        }

        const { data: existing, error: fetchError } = await supabase
          .from("watchlist")
          .select("*")
          .eq("user_id", userId)
          .eq("anime_id", anime_id)
          .maybeSingle();

        if (fetchError) {
          console.error("Error checking existing watchlist entry:", fetchError);
          return res.status(500).json({ error: fetchError.message, details: fetchError });
        }

        if (existing) {
          const { data, error } = await supabase
            .from("watchlist")
            .update({ status, comment, image_url, updated_at: new Date().toISOString() })
            .eq("id", existing.id)
            .select();

          if (error) {
            console.error("Error updating watchlist entry:", error);
            return res.status(500).json({ error: error.message, details: error });
          }

          return res.status(200).json(data);
        } else {
          const { data, error } = await supabase
            .from("watchlist")
            .insert([{ user_id: userId, anime_id, status, comment, image_url }])
            .select();

          if (error) {
            console.error("Error inserting watchlist entry:", error);
            return res.status(500).json({ error: error.message, details: error });
          }

          return res.status(201).json(data);
        }
      } catch (err) {
        console.error("Unexpected error in POST /api/watchlist:", err);
        return res.status(500).json({ error: "Unexpected server error", details: err.message || err });
      }
    }
